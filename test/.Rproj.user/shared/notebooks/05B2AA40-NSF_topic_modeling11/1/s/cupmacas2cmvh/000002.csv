"0",""
"0","# Generate bigrams"
"0",""
"0","# Bigram setup"
"0","library(tidyr)"
"0","#nsf_funding_bigram %>%"
"0","#  count(bigram, sort = TRUE)"
"0","# remove bigrams with stopwords"
"0",""
"0","bigrams_separated <- nsf_funding_bigram %>%"
"0","  separate(bigram, c(""word1"", ""word2""), sep = "" "")"
"0",""
"0","bigrams_filtered <- bigrams_separated %>%"
"0","  filter(!word1 %in% stop_words$word) %>%"
"0","  filter(!word2 %in% stop_words$word)#replace all of the original words in the nsf_funding with lemmas"
"0","# This also needs to be done for the bigrams where the substatution happens for each of the two columns in the bigram. ???"
"0","lemma_bigram_new <- lemma_unique"
"0","#replace word 1 with lemma"
"0","lemma_bigram_new <- left_join(bigrams_filtered,lemma_bigram_new, by = c(""word1"" = ""word"")) %>%"
"0","  mutate(word1 = ifelse(is.na(lemma), word_clean, lemma)) # %>%"
"0","# drop last three columns id, word1 and word2"
"0","lemma_bigram_new <- subset(lemma_bigram_new, select = c(id, word1, word2))"
"0","lemma_bigram_new <- left_join(lemma_bigram_new, lemma_unique, by = c(""word2"" = ""word"")) %>%"
"0","  mutate(word2 = ifelse(is.na(lemma), word_clean, lemma)) # %>%"
"0",""
"0","lemma_bigram_new <- subset(lemma_bigram_new, select = c(id, word1, word2))"
"0","#nsf_funding <- subset()"
"0",""
"0","# new bigram counts:"
"0","bigram_counts <- lemma_bigram_new %>% "
"0","  count(word1, word2, sort = TRUE)"
"0",""
"0","bigram_counts"
